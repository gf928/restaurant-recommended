types = ['german', 'japanese', 'vegetarian', 'french', 'african', 'american', 'barbecue', 'czech', 'chinese', 'thai',
         'mexican', 'indian', 'cafe', 'pizza', 'italian']
restaurant_data = [
    ['german', "Esther's German Saloon", '3', '3', '22 Teutonic Ave.'],
    ['japanese', 'Robatayaki Hachi', '4', '5', '8 Hawthorne Ln.'],
    ['vegetarian', 'BBQ Tofu Paradise', '2', '1', '22A King West'],
    ['french', 'Le Bateau Rouge', '5', '4', '2 South Park Dr.'],
    ['african', 'Khartoum Khartoum', '3', '2', '1566 Maple Rd.'],
    ['american', "Sally's Diner", '4', '3', '96 College Blvd.'],
    ['barbecue', 'Saucy Piggy', '3', '2', '623 Industrial Rd.'],
    ['czech', 'Czech Point', '1', '4', '5567 Queen-Mary Rd'],
    ['german', 'Der Speisewagen', '3', '5', '402 College Blvd.'],
    ['chinese', 'Beijing Express', '2', '4', '38 Teutonic Ave.'],
    ['thai', 'Satay Village', '4', '2', '12 High St.'],
    ['mexican', 'Cancun', '3', '3', '2030 Maple Rd.'],
    ['indian', 'Curry Up', '4', '5', '455 University'],
    ['african', 'Carthage', '2', '1', '59 Court Terrace'],
    ['american', 'Burgerama', '5', '4', '456 University'],
    ['barbecue', 'Three Little Pigs', '3', '2', '12 Summer Court'],
    ['czech', 'Little Prague', '4', '3', '44 Park Ave'],
    ['german', 'Kohl Haus', '3', '2', '3421 Queen-Mary Rd'],
    ['chinese', "Dragon's Tail", '1', '4', '8 Jasmine Rd.'],
    ['thai', 'Hit Me Baby One More Thai', '3', '5', '12 Jasmine Rd.'],
    ['mexican', 'The Whole Tamale', '2', '4', '401 University'],
    ['indian', 'Birmingham Bhangra', '4', '2', '992 Riddick St.'],
    ['mexican', 'Taqueria', '3', '3', '12 North Circle Dr.'],
    ['mexican', "Pedro's", '4', '5', '5521 Alameda'],
    ['chinese', 'Super Wonton Express', '2', '1', '223 Milliways Ave'],
    ['indian', 'Naan Sequitur', '5', '4', '"Unit 12'],
    ['japanese', 'Sakura', '3', '2', '"Unit 18'],
    ['chinese', 'Shandong Lu', '4', '3', '335 University'],
    ['indian', 'Curry Galore', '3', '2', '56 Park Ave'],
    ['cafe', 'North by Northwest', '1', '4', '201 University'],
    ['cafe', 'Full of Beans', '3', '5', '498 College Ave.'],
    ['cafe', "Tropical Jeeve's Cafe", '2', '4', '550 Milliways Ave'],
    ['cafe', 'Zardoz Cafe', '4', '2', '6202 Alameda'],
    ['pizza', 'Angular Pizza', '1', '5', '2232 King St.'],
    ['pizza', 'Flavia', '4', '5', '401 Riddick St.'],
    ['pizza', "Luigi's House of Pies", '2', '1', '5 Garcia Ave.'],
    ['pizza', 'Thick and Thin', '5', '4', '832 Dominican Ave.'],
    ['pizza', 'When in Rome', '3', '2', '234 Valencia St.'],
    ['pizza', 'Pizza 76', '4', '3', '76 Market St.'],
    ['italian', 'Party Pasta', '5', '2', '70 E Main St']
]

# Function to get restaurant recommendations based on cuisine type
def get_recommendations(user_preference):
    """
    Finds restaurants matching a user's preferred cuisine.

    Args:
        user_preference (str): The cuisine type the user is looking for.

    Returns:
        list: A list of restaurant entries matching the preference.
    """
    recommended_restaurants = []
    for restaurant in restaurant_data:
        if restaurant[0].lower() == user_preference.lower():
            recommended_restaurants.append(restaurant)
    return recommended_restaurants

# Main recommendation process
def run_recommender():
    """
    Presents the user with cuisine options and displays matching restaurants.
    """
    print("Welcome to the restaurant recommender!")
    print("\nHere are the available cuisine types:")
    print(", ".join(types))
    
    # Get user input and validate
    while True:
        user_input = input("\nWhat type of food are you in the mood for? ").strip()
        if user_input.lower() in types:
            break
        else:
            print(f"Sorry, '{user_input}' is not a valid cuisine type. Please try again.")

    # Get recommendations based on the valid user input
    recommendations = get_recommendations(user_input)

    # Display results
    if recommendations:
        print(f"\nHere are some {user_input.capitalize()} restaurants for you:")
        for restaurant in recommendations:
            cuisine, name, rating_food, rating_service, address = restaurant
            print(f"\n- **{name}**")
            print(f"  - Address: {address}")
            print(f"  - Food Rating: {rating_food}/5")
            print(f"  - Service Rating: {rating_service}/5")
    else:
        print(f"\nNo {user_input} restaurants were found.")

if __name__ == "__main__":
    run_recommender()
